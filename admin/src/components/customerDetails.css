/* customerDetails.css */

/* Base Styles */
.customer-section {
  padding: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  max-width: 1200px;
  margin: 0 auto;
}

h2 {
  color: #2c3e50;
  margin-bottom: 20px;
  font-size: 24px;
  font-weight: 600;
}

.error-message {
  color: #e74c3c;
  background-color: #fadbd8;
  padding: 10px;
  border-radius: 5px;
  margin-bottom: 20px;
  border-left: 4px solid #e74c3c;
}

/* Search Bar */
.search-bar {
  width: 100%;
  padding: 12px 15px;
  margin-bottom: 20px;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-size: 16px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
}

.search-bar:focus {
  outline: none;
  border-color: #3498db;
  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.2);
}

/* Table Styles - Desktop */
.customer-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  border-radius: 8px;
  overflow: hidden;
}

.customer-table thead {
  background-color: #3498db;
  color: white;
}

.customer-table th {
  padding: 15px;
  text-align: left;
  font-weight: 500;
  letter-spacing: 0.5px;
}

.customer-table td {
  padding: 12px 15px;
  border-bottom: 1px solid #ecf0f1;
  vertical-align: middle;
}

.customer-table tr:hover {
  background-color: #f8f9fa;
}

/* Button Styles */
.view-order {
  background-color: #3498db;
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

.view-order:hover {
  background-color: #2980b9;
  transform: translateY(-1px);
}

.delete-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 5px;
  border-radius: 50%;
  transition: all 0.3s ease;
}

.delete-btn:hover {
  background-color: #fadbd8;
  transform: scale(1.1);
}

/* Order Modal */
.order-modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  background-color: white;
  padding: 25px;
  border-radius: 10px;
  width: 90%;
  max-width: 600px;
  max-height: 80vh;
  overflow-y: auto;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  position: relative;
}

.close-btn {
  position: absolute;
  top: 15px;
  right: 15px;
  background: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
  color: #7f8c8d;
  transition: all 0.3s ease;
}

.close-btn:hover {
  color: #e74c3c;
  transform: scale(1.2);
}

.order-box {
  background-color: #f8f9fa;
  padding: 15px;
  margin-bottom: 15px;
  border-radius: 8px;
  border-left: 4px solid #3498db;
}

.order-box p {
  margin: 8px 0;
}

.order-box ul {
  padding-left: 20px;
  margin: 10px 0;
}

.order-box li {
  margin-bottom: 5px;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  margin-top: 20px;
}

.pagination button {
  padding: 8px 15px;
  border: 1px solid #ddd;
  background-color: white;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.pagination button:hover:not(:disabled) {
  background-color: #3498db;
  color: white;
  border-color: #3498db;
}

.pagination button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.active-page {
  background-color: #3498db;
  color: white;
  border-color: #3498db;
}

/* Card Styles - Mobile & Tablet */
@media (max-width: 768px) {
  .customer-table {
    display: none;
  }

  .customer-card-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
  }

  .customer-card {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .customer-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  .customer-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
  }

  .customer-name {
    font-size: 18px;
    font-weight: 600;
    color: #2c3e50;
  }

  .customer-actions {
    display: flex;
    gap: 10px;
  }

  .customer-details {
    margin-bottom: 15px;
  }

  .detail-row {
    display: flex;
    margin-bottom: 8px;
  }

  .detail-label {
    font-weight: 500;
    color: #7f8c8d;
    min-width: 80px;
  }

  .detail-value {
    color: #2c3e50;
  }

  .customer-orders {
    margin-top: 15px;
  }
}

/* Show table on desktop, cards on mobile/tablet */
@media (min-width: 769px) {
  .customer-card-container {
    display: none;
  }
}

/* Responsive Table for Medium Screens */
@media (max-width: 1024px) and (min-width: 769px) {
  .customer-table {
    font-size: 14px;
  }

  .customer-table th, 
  .customer-table td {
    padding: 10px;
  }

  .view-order {
    padding: 6px 10px;
    font-size: 13px;
  }
}

/* Add this to your CustomerDetails component JSX */
/* Replace the table with this when implementing responsive cards */
/*
<div className="customer-card-container">
  {currentCustomers.length > 0 ? (
    currentCustomers.map((customer) => (
      <div key={customer._id} className="customer-card">
        <div className="customer-card-header">
          <div className="customer-name">{customer.name}</div>
          <div className="customer-actions">
            <button 
              className="view-order" 
              onClick={() => fetchOrdersByCustomerId(customer._id)}
            >
              View Orders
            </button>
            <button 
              className="delete-btn" 
              onClick={() => handleDelete(customer._id)}
            >
              <Trash2 size={18} color="red" />
            </button>
          </div>
        </div>
        <div className="customer-details">
          <div className="detail-row">
            <div className="detail-label">Email:</div>
            <div className="detail-value">{customer.email}</div>
          </div>
          <div className="detail-row">
            <div className="detail-label">Phone:</div>
            <div className="detail-value">{customer.phone || "N/A"}</div>
          </div>
        </div>
      </div>
    ))
  ) : (
    <div className="no-data">No customer data available</div>
  )}
</div>
*/